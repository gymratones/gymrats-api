name: CI

on:
  push:
    branches:
      - staging
      - tf-api #TO BE DELETED

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Post init message
        run: echo "Pipeline initialized."
  terraform-deploy:
    needs: init
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Terraform credentials file
      run: |
        cat << EOF > $HOME/.terraformrc
        credentials "app.terraform.io" {
          token = "${{ secrets.GYMRATS_TERRAFORM_USER_TOKEN }}"
        }
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
    - name: Terraform Init
      run: terraform init
      working-directory: ./tf
    - name: Select (or Create) Terraform Workspace
      run: terraform workspace select -or-create=true ${{ github.head_ref || github.ref_name }}
      working-directory: ./tf
    - name: Create variables.auto.tfvars
      run:  |
        cat << EOF > ./tf/variables.auto.tfvars
        provider_token = "${{ secrets.GYMRATS_STAGING_PROVIDER_TOKEN }}"
        provider_account_id = "${{ secrets.GYMRATS_STAGING_PROVIDER_ACCOUNT_ID }}"
        github_repository = "${{ github.repository }}"
        branch_name = "${{ github.head_ref || github.ref_name }}"
        db_host = "xxx"
        db_port = "xxx"
        db_username = "xxx"
        db_password = "xxx"
        db_database = "xxx"
        node_env = "xxx"
        EOF
    - name: Terraform Plan
      run: terraform plan
      working-directory: ./tf
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./tf
